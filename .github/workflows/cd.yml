name: Node.js CD

on:
  push:
    branches: [ main ]

jobs:
  pre-check:
    name: Pre-check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - run: | 
        npm set //npm.pkg.github.com/:_authToken ${{ secrets.GEMELLO_COMMONS_TOKEN }}
        npm i
    - name: Check lint
      run: npm run format:check
    - name: Build
      run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: pre-check

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install dependencies
      run: | 
        npm set //npm.pkg.github.com/:_authToken ${{ secrets.GEMELLO_COMMONS_TOKEN }}
        npm i
    - name: Run unit tests
      run: npm run test:unit

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get -y install docker-compose
        docker-compose version
    
    - name: Create .env
      run: |
          touch .env
          echo JWT_SECRET=${{ secrets.CI_JWT_SECRET }} >> .env
          echo REDIS_URI=${{ secrets.CI_REDIS_URI }} >> .env
          echo DATABASE_URL=${{ secrets.CI_DATABASE_URL }} >> .env
          echo PORT=3000 >> .env
    
    - name: Build and run database container
      run:  |
        docker-compose up -d db

    - name: Migrate
      run: |
        npx prisma migrate dev --name="test"
    
    - name: Run integration tests
      run: |
        npm run test:integration
    
    - name: Clean up Docker
      run: |
        docker-compose down
   
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: test

    steps:
    - uses: actions/checkout@v2
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        script_stop: true
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/mike/apps/order-service
          git pull origin main
          git status
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo PORT=3001 >> .env

          npm set //npm.pkg.github.com/:_authToken ${{ secrets.GEMELLO_COMMONS_TOKEN }}
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GEMELLO_COMMONS_TOKEN }}" >> ~/.npmrc
          echo "@ember-soft:registry=https://npm.pkg.github.com" >> ~/.npmrc
          npm ci
          rm -f ~/.npmrc

          npm run build
          pm2 restart order-service